// <auto-generated />
using System;
using HemosoftWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HemosoftWeb.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191026183620_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HemosoftWeb.Models.Doacao", b =>
                {
                    b.Property<int>("IdDoacao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataDoacao");

                    b.Property<int?>("DoadorIdDoador");

                    b.Property<int>("IdImpedimentosDefinitivos");

                    b.Property<int>("IdImpedimentosTemporarios");

                    b.Property<int>("IdTriagemClinica");

                    b.Property<int>("IdTriagemLaboratorial");

                    b.Property<int?>("SolicitacaoIdSolicitacao");

                    b.Property<int>("StatusDoacao");

                    b.Property<int?>("TriadorIdTriador");

                    b.HasKey("IdDoacao");

                    b.HasIndex("DoadorIdDoador");

                    b.HasIndex("IdImpedimentosDefinitivos")
                        .IsUnique();

                    b.HasIndex("IdImpedimentosTemporarios")
                        .IsUnique();

                    b.HasIndex("IdTriagemClinica")
                        .IsUnique();

                    b.HasIndex("IdTriagemLaboratorial")
                        .IsUnique();

                    b.HasIndex("SolicitacaoIdSolicitacao");

                    b.HasIndex("TriadorIdTriador");

                    b.ToTable("Doacoes");
                });

            modelBuilder.Entity("HemosoftWeb.Models.Doador", b =>
                {
                    b.Property<int>("IdDoador")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<int>("EstadoCivil");

                    b.Property<int?>("FatorRh");

                    b.Property<int>("Genero");

                    b.Property<string>("NomeCompleto");

                    b.Property<int?>("TipoSanguineo");

                    b.HasKey("IdDoador");

                    b.ToTable("Doadores");
                });

            modelBuilder.Entity("HemosoftWeb.Models.ImpedimentosDefinitivos", b =>
                {
                    b.Property<int>("IdImpedimentosDefinitivos")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AntecedenteAvc");

                    b.Property<bool?>("HepatiteB");

                    b.Property<bool?>("HepatiteC");

                    b.Property<bool?>("Hiv");

                    b.HasKey("IdImpedimentosDefinitivos");

                    b.ToTable("ImpedimentosDefinitivos");
                });

            modelBuilder.Entity("HemosoftWeb.Models.ImpedimentosTemporarios", b =>
                {
                    b.Property<int>("IdImpedimentosTemporarios")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BebidaAlcoolica");

                    b.Property<int?>("BebidaAlcoolicaUltimaVez");

                    b.Property<int?>("Gravidez");

                    b.Property<int?>("GravidezUltimaVez");

                    b.Property<bool?>("Gripe");

                    b.Property<int?>("GripeUltimaVez");

                    b.Property<bool?>("Tatuagem");

                    b.Property<int?>("TatuagemUltimaVez");

                    b.HasKey("IdImpedimentosTemporarios");

                    b.ToTable("ImpedimentosTemporarios");
                });

            modelBuilder.Entity("HemosoftWeb.Models.Solicitacao", b =>
                {
                    b.Property<int>("IdSolicitacao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataSolicitacao");

                    b.Property<int?>("SolicitanteIdSolicitante");

                    b.HasKey("IdSolicitacao");

                    b.HasIndex("SolicitanteIdSolicitante");

                    b.ToTable("Solicitacoes");
                });

            modelBuilder.Entity("HemosoftWeb.Models.Solicitante", b =>
                {
                    b.Property<int>("IdSolicitante")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj");

                    b.Property<string>("RazaoSocial");

                    b.Property<string>("Responsavel");

                    b.Property<string>("Senha");

                    b.Property<int>("StatusUsuario");

                    b.HasKey("IdSolicitante");

                    b.ToTable("Solicitantes");
                });

            modelBuilder.Entity("HemosoftWeb.Models.Triador", b =>
                {
                    b.Property<int>("IdTriador")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Matricula");

                    b.Property<string>("NomeCompleto");

                    b.Property<string>("Senha");

                    b.Property<int>("StatusUsuario");

                    b.HasKey("IdTriador");

                    b.ToTable("Triadores");
                });

            modelBuilder.Entity("HemosoftWeb.Models.TriagemClinica", b =>
                {
                    b.Property<int>("IdTriagemClinica")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Peso");

                    b.Property<int>("Pulso");

                    b.Property<int>("StatusTriagem");

                    b.Property<double>("Temperatura");

                    b.HasKey("IdTriagemClinica");

                    b.ToTable("TriagensClinicas");
                });

            modelBuilder.Entity("HemosoftWeb.Models.TriagemLaboratorial", b =>
                {
                    b.Property<int>("IdTriagemLaboratorial")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("HepatiteB");

                    b.Property<bool?>("HepatiteC");

                    b.Property<bool?>("Hiv");

                    b.Property<int?>("StatusTriagem");

                    b.HasKey("IdTriagemLaboratorial");

                    b.ToTable("TriagensLaboratoriais");
                });

            modelBuilder.Entity("HemosoftWeb.Models.Doacao", b =>
                {
                    b.HasOne("HemosoftWeb.Models.Doador", "Doador")
                        .WithMany("Doacoes")
                        .HasForeignKey("DoadorIdDoador");

                    b.HasOne("HemosoftWeb.Models.ImpedimentosDefinitivos", "ImpedimentosDefinitivos")
                        .WithOne("Doacao")
                        .HasForeignKey("HemosoftWeb.Models.Doacao", "IdImpedimentosDefinitivos")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HemosoftWeb.Models.ImpedimentosTemporarios", "ImpedimentosTemporarios")
                        .WithOne("Doacao")
                        .HasForeignKey("HemosoftWeb.Models.Doacao", "IdImpedimentosTemporarios")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HemosoftWeb.Models.TriagemClinica", "TriagemClinica")
                        .WithOne("Doacao")
                        .HasForeignKey("HemosoftWeb.Models.Doacao", "IdTriagemClinica")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HemosoftWeb.Models.TriagemLaboratorial", "TriagemLaboratorial")
                        .WithOne("Doacao")
                        .HasForeignKey("HemosoftWeb.Models.Doacao", "IdTriagemLaboratorial")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HemosoftWeb.Models.Solicitacao", "Solicitacao")
                        .WithMany("Doacoes")
                        .HasForeignKey("SolicitacaoIdSolicitacao");

                    b.HasOne("HemosoftWeb.Models.Triador", "Triador")
                        .WithMany("Doacoes")
                        .HasForeignKey("TriadorIdTriador");
                });

            modelBuilder.Entity("HemosoftWeb.Models.Solicitacao", b =>
                {
                    b.HasOne("HemosoftWeb.Models.Solicitante", "Solicitante")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("SolicitanteIdSolicitante");
                });
#pragma warning restore 612, 618
        }
    }
}
